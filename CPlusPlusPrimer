<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>chapter12</title>
<link rel="stylesheet" href="http://benweet.github.io/stackedit/css/main-min.css" />
<script type="text/javascript" src="http://benweet.github.io/stackedit/lib/MathJax/MathJax.js?config=TeX-AMS_HTML"></script>
</head>
<body><h2 class="wmd-title" id="12">第12章 类</h2>

<ul>
<li>构造函数可以初始化const类型的数据成员或引用类型的数据成员，但不能对它赋值。即它们只能在构造函数的初始化列表中出现，而不能出现在构造函数的函数体里。也就是说初始化引用或const类型的数据成员的唯一机会是在初始化列表中。</li>
<li>构造函数初始化列表仅用于指定初始化成员的值，并不指定初始化的次序。</li>
<li>每个数据成员在至多在初始化列表指定<strong>一次</strong>。（因为一个变量不可能两次初始化）</li>
<li>类的数据成员初始化的次序就是成员在类中定义的顺序。</li>
<li>初始化式可以是任意复杂的表达式。</li>
<li>多数情况下应使用<code>explicit</code>修饰<strong>单个参数</strong>的构造函数，抑制其进行隐式转换。</li>
<li>友元允许一个类将其非公有成员的访问权授予指定的函数或类。</li>
<li>友元不是授予友元关系的类的成员，因此友元不受其声明所在部分的访问控制符（<code>public</code>,<code>protected</code>,<code>private</code>）的影响。</li>
<li>友元声明将已命名的类或非成员函数引入到外围作用域中。此外友元函数可以在类内部定义，该函数的作用域扩展到包围该类的定义的作用域。</li>
<li><code>static</code>成员函数不能使用非<code>static</code>成员</li>
<li>'static'成员函数不能声明为<code>const</code>。（因为<code>const</code>修饰类的成员函数时表示，该成员函数不会修改对象的属性）</li>
<li><code>static</code>成员函数不能声明为<strong>纯虚函数</strong>。</li>
<li><code>static</code>数据成员必须在类外定义。 </li>
</ul></body>
</html>